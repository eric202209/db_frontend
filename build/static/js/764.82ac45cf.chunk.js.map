{"version":3,"file":"static/js/764.82ac45cf.chunk.js","mappings":"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","sources":["Chart.js"],"sourcesContent":["import React from 'react';\r\nimport { Bar, Line, Pie } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, BarElement, ArcElement, Title, Tooltip, Legend } from 'chart.js';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,\r\n  ArcElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst getColors = (count) => {\r\n  const colors = [\r\n    'rgba(75,192,192,0.6)', 'rgba(255,99,132,0.6)', 'rgba(255,206,86,0.6)',\r\n    'rgba(54,162,235,0.6)', 'rgba(153,102,255,0.6)', 'rgba(255,159,64,0.6)'\r\n  ];\r\n  return Array(count).fill().map((_, i) => colors[i % colors.length]);\r\n};\r\n\r\nconst Chart = ({ data, type, title }) => {\r\n  console.log(`Rendering chart for ${title}:`, data);\r\n\r\n  if (!data || !Array.isArray(data) || data.length === 0) {\r\n    return <div>No data available for this chart.</div>;\r\n  }\r\n\r\n  // // Sort data for 'Top Low CO2 Vehicles' chart\r\n  // const sortedData = title === 'Top Low CO2 Vehicles' \r\n  // ? [...data].sort((a, b) => a.value - b.value).slice(0, 10)\r\n  // : data;\r\n\r\n  const labels = data.map(item => item.label || 'Undefined');\r\n  const values = data.map(item => {\r\n    const value = parseFloat(item.value);\r\n    return isNaN(value) ? 0 : value;\r\n  });\r\n\r\n  const chartData = {\r\n    labels: labels,\r\n    datasets: [\r\n      {\r\n        label: title,\r\n        data: values,\r\n        backgroundColor: type === 'pie' ? getColors(values.length) : getColors(1)[0],\r\n        borderColor: type === 'line' ? getColors(1)[0] : 'rgba(75,192,192,1)',\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: { \r\n        position: 'top',\r\n        labels: {\r\n          font: {\r\n            size: 14,\r\n            weight: 'bold'\r\n          }\r\n        }\r\n      },\r\n      title: { \r\n        display: true, \r\n        text: title,\r\n        font: {\r\n          size: 18,\r\n          weight: 'bold'\r\n        }\r\n      },\r\n      tooltip: {\r\n        callbacks: {\r\n          label: (context) => {\r\n            let label = context.label || '';\r\n            if (label) {\r\n              label += ': ';\r\n            }\r\n            let value;\r\n            if (type === 'pie') {\r\n              value = context.parsed;\r\n            } else {\r\n              value = context.parsed.y;\r\n            }\r\n            if (value !== null && !isNaN(value)) {\r\n              value = parseFloat(value);\r\n              if (title === 'CO2 Rating Percentages') {\r\n                label += value.toFixed(2) + '%';\r\n              } else if (title === 'Top Low CO2 Vehicles' || title === 'CO2 Emissions by Vehicle Class') {\r\n                label += value.toFixed(2) + ' g/km';\r\n              } else if (title === 'Consumption by Transmission' || title.includes('Consumption')) {\r\n                label += value.toFixed(2) + ' L/100km';\r\n              } else {\r\n                label += value.toFixed(2);\r\n              }\r\n            } else {\r\n              label += 'N/A';\r\n            }\r\n            return label;\r\n          }\r\n        }\r\n      }\r\n    },\r\n    scales: type !== 'pie' ? {\r\n      y: {\r\n        beginAtZero: true,\r\n        ticks: {\r\n          font:{size:12},\r\n          callback: function(value) {\r\n            if (value === null || isNaN(value)) return 'N/A';\r\n            value = parseFloat(value);\r\n            if (title === 'CO2 Rating Percentages') {\r\n              return value.toFixed(2) + '%';\r\n            } else if (title === 'Top Low CO2 Vehicles' || title === 'CO2 Emissions by Vehicle Class') {\r\n              return value.toFixed(2) + ' g/km';\r\n            } else if (title === 'Consumption by Transmission' || title.includes('Consumption')) {\r\n              return value.toFixed(2) + ' L/100km';\r\n            } else {\r\n              return value.toFixed(2);\r\n            }\r\n          }\r\n        },\r\n        grid: {\r\n            color: 'rgba(0, 0, 0, 0.1)'\r\n          }\r\n        },\r\n        x: {\r\n          ticks: {\r\n            font: {\r\n              size: 12\r\n            }\r\n          },\r\n          grid: {\r\n            color: 'rgba(0, 0, 0, 0.1)'\r\n          }\r\n        }\r\n    } : {},\r\n  };\r\n\r\n  const renderChart = () => {\r\n    try {\r\n      switch (type) {\r\n        case 'bar':\r\n          return <Bar data={chartData} options={options} />;\r\n        case 'line':\r\n          return <Line data={chartData} options={options} />;\r\n        case 'pie':\r\n          return <Pie data={chartData} options={options} />;\r\n        default:\r\n          return <Bar data={chartData} options={options} />;\r\n      }\r\n    } catch (error) {\r\n      console.error('Error rendering chart:', error);\r\n      return <div>Error rendering chart. Check console for details.</div>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chart-container\">\r\n      {renderChart()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n"],"names":["ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","BarElement","ArcElement","Title","Tooltip","Legend","getColors","count","colors","Array","fill","map","_","i","length","_ref","data","type","title","console","log","concat","isArray","_jsx","children","labels","item","label","values","value","parseFloat","isNaN","chartData","datasets","backgroundColor","borderColor","borderWidth","options","responsive","maintainAspectRatio","plugins","legend","position","font","size","weight","display","text","tooltip","callbacks","context","parsed","y","toFixed","includes","scales","beginAtZero","ticks","callback","grid","color","x","className","renderChart","Bar","Line","Pie","error"],"sourceRoot":""}