{"version":3,"file":"static/js/640.dfdab3fb.chunk.js","mappings":"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","sources":["DataTable.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst DataTable = ({ data, title, onComparisonToggle }) => {\r\n    const [sortConfig, setSortConfig] = useState(null);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n\r\n    const sortedItems = React.useMemo(() => {\r\n        let sortableItems = [...data];\r\n        if (sortConfig !== null) {\r\n            sortableItems.sort((a, b) => {\r\n                if (a[sortConfig.key] < b[sortConfig.key]) {\r\n                    return sortConfig.direction === 'ascending' ? -1 : 1;\r\n                }\r\n                if (a[sortConfig.key] > b[sortConfig.key]) {\r\n                    return sortConfig.direction === 'ascending' ? 1 : -1;\r\n                }\r\n                return 0;\r\n            });\r\n        }\r\n        return sortableItems;\r\n    }, [data, sortConfig]);\r\n\r\n    const requestSort = (key) => {\r\n        let direction = 'ascending';\r\n        if (sortConfig && sortConfig.key === key && sortConfig.direction === 'ascending') {\r\n            direction = 'descending';\r\n        }\r\n        setSortConfig({ key, direction });\r\n    };\r\n\r\n    const filteredItems = sortedItems.filter(item =>\r\n        Object.values(item).some(val => \r\n            val.toString().toLowerCase().includes(searchTerm.toLowerCase())\r\n        )\r\n    );\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const itemsPerPage = 10;\r\n\r\n    const indexOfLastItem = currentPage * itemsPerPage;\r\n    const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n    const currentItems = filteredItems.slice(indexOfFirstItem, indexOfLastItem);\r\n    \r\n    const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n    return (\r\n        <div className=\"datatable\">\r\n            <h2>{title}</h2>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Search table...\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n            />\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th onClick={() => requestSort('make')}>Make</th>\r\n                        <th onClick={() => requestSort('model')}>Model</th>\r\n                        <th onClick={() => requestSort('combined_consumption')}>Combined Consumption</th>\r\n                        <th onClick={() => requestSort('co2_emissions')}>CO2 Emissions</th>\r\n                        <th>Compare</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {currentItems.map((vehicle, index) => (\r\n                        <tr key={index}>\r\n                            <td>{vehicle.make || ''}</td>\r\n                            <td>{vehicle.model || ''}</td>\r\n                            <td>{vehicle.combined_consumption || ''}</td>\r\n                            <td>{vehicle.co2_emissions || ''}</td>\r\n                            <td>\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    onChange={() => onComparisonToggle(vehicle)}\r\n                                />\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n            <Pagination\r\n                itemsPerPage={itemsPerPage}\r\n                totalItems={data.length}\r\n                paginate={paginate}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Pagination = ({ itemsPerPage, totalItems, paginate }) => {\r\n    const pageNumbers = [];\r\n\r\n    for (let i = 1; i <= Math.ceil(totalItems / itemsPerPage); i++) {\r\n        pageNumbers.push(i);\r\n    }\r\n\r\n    return (\r\n        <nav>\r\n            <ul className=\"pagination\">\r\n                {pageNumbers.map(number => (\r\n                    <li key={number} className=\"page-item\">\r\n                        <a onClick={() => paginate(number)} href=\"!#\" className=\"page-link\">\r\n                            {number}\r\n                        </a>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default DataTable;"],"names":["Pagination","_ref2","itemsPerPage","totalItems","paginate","pageNumbers","i","Math","ceil","push","_jsx","children","className","map","number","onClick","href","_ref","data","title","onComparisonToggle","sortConfig","setSortConfig","useState","searchTerm","setSearchTerm","sortedItems","React","sortableItems","sort","a","b","key","direction","requestSort","filteredItems","filter","item","Object","values","some","val","toString","toLowerCase","includes","currentPage","setCurrentPage","indexOfLastItem","indexOfFirstItem","currentItems","slice","_jsxs","type","placeholder","value","onChange","e","target","vehicle","index","make","model","combined_consumption","co2_emissions","length","pageNumber"],"sourceRoot":""}