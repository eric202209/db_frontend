{"version":3,"file":"static/js/764.8767bd51.chunk.js","mappings":"0KAIAA,EAAAA,GAAQC,SACNC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,IAGF,MA8EA,EA9EcC,IAA4B,IAA3B,KAAEC,EAAI,KAAEC,EAAI,MAAEC,GAAOH,EAClC,IAAKC,IAASG,MAAMC,QAAQJ,IAAyB,IAAhBA,EAAKK,OACxC,OAAOC,EAAAA,EAAAA,KAAA,OAAAC,SAAK,sCAId,IAAKP,EAAK,GAAGQ,eAAe,WAAaR,EAAK,GAAGQ,eAAe,SAE9D,OADAC,QAAQC,MAAM,iCAAkCV,IACzCM,EAAAA,EAAAA,KAAA,OAAAC,SAAK,0CAGd,MAAMI,EAASX,EAAKY,KAAIC,GAAQA,EAAKC,QAC/BC,EAASf,EAAKY,KAAIC,GAAQA,EAAKG,QAE/BC,EAAaC,IACjB,MAAMC,EAAS,CACb,uBAAwB,uBAAwB,uBAChD,uBAAwB,wBAAyB,wBAEnD,OAAOhB,MAAMe,GAAOE,OAAOR,KAAI,CAACS,EAAGC,IAAMH,EAAOG,EAAIH,EAAOd,SAAQ,EAG/DkB,EAAY,CAChBZ,OAAQA,EACRa,SAAU,CACR,CACEV,MAAOZ,EACPF,KAAMe,EACNU,gBAA0B,QAATxB,EAAiBgB,EAAUF,EAAOV,QAAUY,EAAU,GAAG,GAC1ES,YAAsB,SAATzB,EAAkBgB,EAAU,GAAG,GAAK,qBACjDU,YAAa,KAKbC,EAAU,CACdC,YAAY,EACZC,QAAS,CACPC,OAAQ,CACNC,SAAU,OAEZ9B,MAAO,CACL+B,SAAS,EACTC,KAAMhC,GAERiC,QAAS,CACPC,UAAW,CACTtB,MAAQuB,GAAO,GAAAC,OAAQD,EAAQE,OAAOC,GAAKH,EAAQE,WAIzDE,OAAiB,QAATxC,EAAiB,CACvBuC,EAAG,CACDE,aAAa,IAEb,CAAC,GAgBP,OACEpC,EAAAA,EAAAA,KAAA,OAAKqC,UAAU,kBAAiBpC,SAddqC,MAClB,OAAQ3C,GACN,IAAK,MAML,QACE,OAAOK,EAAAA,EAAAA,KAACuC,EAAAA,GAAG,CAAC7C,KAAMuB,EAAWK,QAASA,IALxC,IAAK,OACH,OAAOtB,EAAAA,EAAAA,KAACwC,EAAAA,GAAI,CAAC9C,KAAMuB,EAAWK,QAASA,IACzC,IAAK,MACH,OAAOtB,EAAAA,EAAAA,KAACyC,EAAAA,GAAG,CAAC/C,KAAMuB,EAAWK,QAASA,IAG1C,EAKGgB,IACG,C","sources":["Chart.js"],"sourcesContent":["import React from 'react';\r\nimport { Bar, Line, Pie } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, BarElement, ArcElement, Title, Tooltip, Legend } from 'chart.js';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,\r\n  ArcElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst Chart = ({ data, type, title }) => {\r\n  if (!data || !Array.isArray(data) || data.length === 0) {\r\n    return <div>No data available for this chart.</div>;\r\n  }\r\n\r\n  // Ensure data has the expected structure\r\n  if (!data[0].hasOwnProperty('label') || !data[0].hasOwnProperty('value')) {\r\n    console.error('Invalid data format for chart:', data);\r\n    return <div>Error: Invalid data format for chart.</div>;\r\n  }\r\n  \r\n  const labels = data.map(item => item.label);\r\n  const values = data.map(item => item.value);\r\n\r\n  const getColors = (count) => {\r\n    const colors = [\r\n      'rgba(75,192,192,0.6)', 'rgba(255,99,132,0.6)', 'rgba(255,206,86,0.6)',\r\n      'rgba(54,162,235,0.6)', 'rgba(153,102,255,0.6)', 'rgba(255,159,64,0.6)'\r\n    ];\r\n    return Array(count).fill().map((_, i) => colors[i % colors.length]);\r\n  };\r\n\r\n  const chartData = {\r\n    labels: labels,\r\n    datasets: [\r\n      {\r\n        label: title,\r\n        data: values,\r\n        backgroundColor: type === 'pie' ? getColors(values.length) : getColors(1)[0],\r\n        borderColor: type === 'line' ? getColors(1)[0] : 'rgba(75,192,192,1)',\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: title,\r\n      },\r\n      tooltip: {\r\n        callbacks: {\r\n          label: (context) => `${context.parsed.y || context.parsed}`,\r\n        },\r\n      },\r\n    },\r\n    scales: type !== 'pie' ? {\r\n      y: {\r\n        beginAtZero: true,\r\n      },\r\n    } : {},\r\n  };\r\n\r\n  const renderChart = () => {\r\n    switch (type) {\r\n      case 'bar':\r\n        return <Bar data={chartData} options={options} />;\r\n      case 'line':\r\n        return <Line data={chartData} options={options} />;\r\n      case 'pie':\r\n        return <Pie data={chartData} options={options} />;\r\n      default:\r\n        return <Bar data={chartData} options={options} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chart-container\">\r\n      {renderChart()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;"],"names":["ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","BarElement","ArcElement","Title","Tooltip","Legend","_ref","data","type","title","Array","isArray","length","_jsx","children","hasOwnProperty","console","error","labels","map","item","label","values","value","getColors","count","colors","fill","_","i","chartData","datasets","backgroundColor","borderColor","borderWidth","options","responsive","plugins","legend","position","display","text","tooltip","callbacks","context","concat","parsed","y","scales","beginAtZero","className","renderChart","Bar","Line","Pie"],"sourceRoot":""}