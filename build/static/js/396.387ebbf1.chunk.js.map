{"version":3,"file":"static/js/396.387ebbf1.chunk.js","mappings":"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","sources":["AnalysisResults.js","Chart.js","DataTable.js"],"sourcesContent":["import React from 'react';\r\nimport Chart from './Chart';\r\nimport DataTable from './DataTable';\r\n\r\nconst AnalysisResults = ({ data, comparisonData }) => {\r\n    const chartConfigs = [\r\n        { key: 'avgConsMake', title: \"Average Consumption\", type: 'bar' },\r\n        { key: 'co2ByClass', title: \"CO2 Emissions by Vehicle Class\", type: 'bar' },\r\n        { key: 'fuelTypeDist', title: \"Fuel Type Distribution\", type: 'pie' },\r\n        { key: 'bestSmog', title: \"Best Smog Ratings\", type: 'bar' },\r\n        { key: 'consByTrans', title: \"Consumption by Transmission\", type: 'bar' },\r\n        { key: 'co2RatingPct', title: \"CO2 Rating Percentages\", type: 'pie' },\r\n        { key: 'topLowCo2', title: \"Top Low CO2 Emitters\", type: 'bar' },\r\n        { key: 'topEfficient', title: \"Top Efficient Vehicles\", type: 'bar' }\r\n    ];\r\n\r\n    const formatChartData = (rawData, key, isComparison) => {\r\n      if (!rawData || (Array.isArray(rawData) && rawData.length === 0)) return [];\r\n  \r\n      const processData = (data) => {\r\n          const dataArray = Array.isArray(data) ? data : [data];\r\n          \r\n          switch (key) {\r\n              case 'avgConsMake':\r\n                  return dataArray.map(item => ({\r\n                      label: item.MAKE,\r\n                      value: parseFloat(item.COMBINED_CONSUMPTION)\r\n                  }));\r\n              case 'co2ByClass':\r\n                  return dataArray.map(item => ({\r\n                      label: item.VEHICLE_CLASS,\r\n                      value: parseFloat(item.CO2_EMISSIONS)\r\n                  }));\r\n              case 'fuelTypeDist':\r\n                  return dataArray.map(item => ({\r\n                      label: item.FUEL_TYPE,\r\n                      value: 1\r\n                  }));\r\n              case 'bestSmog':\r\n                  return dataArray.map(item => ({\r\n                      label: `${item.MAKE} ${item.MODEL}`,\r\n                      value: parseFloat(item.SMOG_RATING)\r\n                  }));\r\n              case 'consByTrans':\r\n                  return dataArray.map(item => ({\r\n                      label: item.TRANSMISSION,\r\n                      value: parseFloat(item.COMBINED_CONSUMPTION)\r\n                  }));\r\n              case 'co2RatingPct':\r\n                  return dataArray.map(item => ({\r\n                      label: item.CO2_RATING.toString(),\r\n                      value: 1\r\n                  }));\r\n              case 'topLowCo2':\r\n                  return dataArray.map(item => ({\r\n                      label: `${item.MAKE} ${item.MODEL}`,\r\n                      value: parseFloat(item.CO2_EMISSIONS)\r\n                  }));\r\n              case 'topEfficient':\r\n                  return dataArray.map(item => ({\r\n                      label: `${item.MAKE} ${item.MODEL}`,\r\n                      value: parseFloat(item.COMBINED_CONSUMPTION)\r\n                  }));\r\n              default:\r\n                  return [];\r\n          }\r\n      };\r\n\r\n      if (isComparison) {\r\n        return processData(rawData);\r\n      } else {\r\n        // Existing logic for overall analysis data\r\n        return rawData.map(item => {\r\n            const labels = Object.keys(item);\r\n            let labelIndex, valueIndex;\r\n    \r\n            switch (key) {\r\n                case 'fuelTypeDist':\r\n                case 'avgConsMake':\r\n                case 'co2ByClass':\r\n                case 'consByTrans':\r\n                case 'topLowCo2':\r\n                    labelIndex = 1;\r\n                    valueIndex = 2;\r\n                    break;\r\n                case 'bestSmog':\r\n                case 'topEfficient':\r\n                    labelIndex = 2;\r\n                    valueIndex = 3;\r\n                    break;\r\n                case 'co2RatingPct':\r\n                    labelIndex = 1;\r\n                    valueIndex = 3;\r\n                    break;\r\n                default:\r\n                    return null;\r\n            }\r\n    \r\n            return {\r\n                label: item[labels[labelIndex]],\r\n                value: parseFloat(item[labels[valueIndex]])\r\n            };\r\n        }).filter(Boolean);\r\n      }\r\n    }\r\n      \r\n      // In the return statement\r\n    return (\r\n      <div className=\"analysis-results\">\r\n        {chartConfigs.map(({ key, title, type }) => (\r\n          <div key={key} className=\"chart-section\">\r\n            <h2>{title}</h2>\r\n            {data[key] && data[key].length > 0 ? (\r\n              <>\r\n                <Chart \r\n                  data={formatChartData(data[key], key)} \r\n                  title={title} \r\n                  type={type} \r\n                />\r\n                <DataTable data={data[key]} />\r\n              </>\r\n            ) : (\r\n              <p className=\"no-data-message\">No data available for {title}.</p>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default AnalysisResults;\r\n","import React from 'react';\r\nimport { Bar, Line, Pie } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, BarElement, ArcElement, Title, Tooltip, Legend } from 'chart.js';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,\r\n  ArcElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst getColors = (count) => {\r\n  const colors = [\r\n    'rgba(75,192,192,0.6)', 'rgba(255,99,132,0.6)', 'rgba(255,206,86,0.6)',\r\n    'rgba(54,162,235,0.6)', 'rgba(153,102,255,0.6)', 'rgba(255,159,64,0.6)'\r\n  ];\r\n  return Array(count).fill().map((_, i) => colors[i % colors.length]);\r\n};\r\n\r\nconst Chart = ({ data, type, title }) => {\r\n  if (!data || !Array.isArray(data) || data.length === 0) {\r\n    return <div>No data available for this chart.</div>;\r\n  }\r\n\r\n  const labels = data.map(item => item.label);\r\n  const values = data.map(item => item.value);\r\n\r\n  const chartData = {\r\n    labels: labels,\r\n    datasets: [\r\n      {\r\n        label: title,\r\n        data: values,\r\n        backgroundColor: type === 'pie' ? getColors(values.length) : getColors(1)[0],\r\n        borderColor: type === 'line' ? getColors(1)[0] : 'rgba(75,192,192,1)',\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: { position: 'top' },\r\n      title: { display: true, text: title },\r\n      tooltip: {\r\n        callbacks: {\r\n          label: (context) => {\r\n            let label = context.label || '';\r\n            if (label) {\r\n              label += ': ';\r\n            }\r\n            if (context.parsed.y !== null) {\r\n              label += new Intl.NumberFormat('en-US', { \r\n                minimumFractionDigits: 2, \r\n                maximumFractionDigits: 2 \r\n              }).format(context.parsed.y);\r\n            }\r\n            return label;\r\n          }\r\n        }\r\n      }\r\n    },\r\n    scales: type !== 'pie' ? {\r\n      y: {\r\n        beginAtZero: true,\r\n        ticks: {\r\n          callback: function(value) {\r\n            return new Intl.NumberFormat('en-US', { \r\n              minimumFractionDigits: 2, \r\n              maximumFractionDigits: 2 \r\n            }).format(value);\r\n          }\r\n        }\r\n      },\r\n    } : {},\r\n  };\r\n\r\n  const renderChart = () => {\r\n    switch (type) {\r\n      case 'bar':\r\n        return <Bar data={chartData} options={options} />;\r\n      case 'line':\r\n        return <Line data={chartData} options={options} />;\r\n      case 'pie':\r\n        return <Pie data={chartData} options={options} />;\r\n      default:\r\n        return <Bar data={chartData} options={options} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chart-container\">\r\n      {renderChart()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from 'react';\r\n\r\nconst DataTable = ({ data }) => {\r\n    if (!data || data.length === 0) return null;\r\n  \r\n    const headers = Object.keys(data[0]);\r\n  \r\n    return (\r\n      <table className=\"data-table\">\r\n        <thead>\r\n          <tr>\r\n            {headers.map(header => (\r\n              <th key={header}>{header.replace(/_/g, ' ')}</th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((row, index) => (\r\n            <tr key={index}>\r\n              {headers.map(header => (\r\n                <td key={header}>{row[header]}</td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  };\r\n\r\nexport default DataTable;"],"names":["_ref","data","comparisonData","formatChartData","rawData","key","isComparison","Array","isArray","length","dataArray","map","item","label","MAKE","value","parseFloat","COMBINED_CONSUMPTION","VEHICLE_CLASS","CO2_EMISSIONS","FUEL_TYPE","concat","MODEL","SMOG_RATING","TRANSMISSION","CO2_RATING","toString","processData","labels","Object","keys","labelIndex","valueIndex","filter","Boolean","_jsx","className","children","title","type","_ref2","_jsxs","_Fragment","Chart","DataTable","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","BarElement","ArcElement","Title","Tooltip","Legend","getColors","count","colors","fill","_","i","values","chartData","datasets","backgroundColor","borderColor","borderWidth","options","responsive","plugins","legend","position","display","text","tooltip","callbacks","context","parsed","y","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","format","scales","beginAtZero","ticks","callback","renderChart","Bar","Line","Pie","headers","header","replace","row","index"],"sourceRoot":""}