{"version":3,"file":"static/js/260.00c67916.chunk.js","mappings":"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","sources":["../node_modules/react-chartjs-2/src/utils.ts","../node_modules/react-chartjs-2/src/chart.tsx","../node_modules/react-chartjs-2/src/typedCharts.tsx","Chart.js","ComparisonView.js","Dashboard.js","DataTable.js"],"sourcesContent":["import type { MouseEvent } from 'react';\nimport type {\n  ChartType,\n  ChartData,\n  DefaultDataPoint,\n  ChartDataset,\n  ChartOptions,\n  Chart,\n} from 'chart.js';\n\nimport type { ForwardedRef } from './types.js';\n\nconst defaultDatasetIdKey = 'label';\n\nexport function reforwardRef<T>(ref: ForwardedRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}\n\nexport function setOptions<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(chart: Chart<TType, TData, TLabel>, nextOptions: ChartOptions<TType>) {\n  const options = chart.options;\n\n  if (options && nextOptions) {\n    Object.assign(options, nextOptions);\n  }\n}\n\nexport function setLabels<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextLabels: TLabel[] | undefined\n) {\n  currentData.labels = nextLabels;\n}\n\nexport function setDatasets<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextDatasets: ChartDataset<TType, TData>[],\n  datasetIdKey = defaultDatasetIdKey\n) {\n  const addedDatasets: ChartDataset<TType, TData>[] = [];\n\n  currentData.datasets = nextDatasets.map(\n    (nextDataset: Record<string, unknown>) => {\n      // given the new set, find it's current match\n      const currentDataset = currentData.datasets.find(\n        (dataset: Record<string, unknown>) =>\n          dataset[datasetIdKey] === nextDataset[datasetIdKey]\n      );\n\n      // There is no original to update, so simply add new one\n      if (\n        !currentDataset ||\n        !nextDataset.data ||\n        addedDatasets.includes(currentDataset)\n      ) {\n        return { ...nextDataset } as ChartDataset<TType, TData>;\n      }\n\n      addedDatasets.push(currentDataset);\n\n      Object.assign(currentDataset, nextDataset);\n\n      return currentDataset;\n    }\n  );\n}\n\nexport function cloneData<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(data: ChartData<TType, TData, TLabel>, datasetIdKey = defaultDatasetIdKey) {\n  const nextData: ChartData<TType, TData, TLabel> = {\n    labels: [],\n    datasets: [],\n  };\n\n  setLabels(nextData, data.labels);\n  setDatasets(nextData, data.datasets, datasetIdKey);\n\n  return nextData;\n}\n\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getDatasetAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'dataset',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'nearest',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementsAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'index',\n    { intersect: true },\n    false\n  );\n}\n","import React, { useEffect, useRef, forwardRef } from 'react';\nimport { Chart as ChartJS } from 'chart.js';\nimport type { ChartType, DefaultDataPoint } from 'chart.js';\n\nimport type { ForwardedRef, ChartProps, BaseChartComponent } from './types.js';\nimport {\n  reforwardRef,\n  cloneData,\n  setOptions,\n  setLabels,\n  setDatasets,\n} from './utils.js';\n\nfunction ChartComponent<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  props: ChartProps<TType, TData, TLabel>,\n  ref: ForwardedRef<ChartJS<TType, TData, TLabel>>\n) {\n  const {\n    height = 150,\n    width = 300,\n    redraw = false,\n    datasetIdKey,\n    type,\n    data,\n    options,\n    plugins = [],\n    fallbackContent,\n    updateMode,\n    ...canvasProps\n  } = props as ChartProps;\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const chartRef = useRef<ChartJS | null>();\n\n  const renderChart = () => {\n    if (!canvasRef.current) return;\n\n    chartRef.current = new ChartJS(canvasRef.current, {\n      type,\n      data: cloneData(data, datasetIdKey),\n      options: options && { ...options },\n      plugins,\n    });\n\n    reforwardRef(ref, chartRef.current);\n  };\n\n  const destroyChart = () => {\n    reforwardRef(ref, null);\n\n    if (chartRef.current) {\n      chartRef.current.destroy();\n      chartRef.current = null;\n    }\n  };\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && options) {\n      setOptions(chartRef.current, options);\n    }\n  }, [redraw, options]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current) {\n      setLabels(chartRef.current.config.data, data.labels);\n    }\n  }, [redraw, data.labels]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && data.datasets) {\n      setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n    }\n  }, [redraw, data.datasets]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    if (redraw) {\n      destroyChart();\n      setTimeout(renderChart);\n    } else {\n      chartRef.current.update(updateMode);\n    }\n  }, [redraw, options, data.labels, data.datasets, updateMode]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    destroyChart();\n    setTimeout(renderChart);\n  }, [type]);\n\n  useEffect(() => {\n    renderChart();\n\n    return () => destroyChart();\n  }, []);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      role='img'\n      height={height}\n      width={width}\n      {...canvasProps}\n    >\n      {fallbackContent}\n    </canvas>\n  );\n}\n\nexport const Chart = forwardRef(ChartComponent) as BaseChartComponent;\n","import React, { forwardRef } from 'react';\nimport {\n  Chart as ChartJS,\n  LineController,\n  BarController,\n  RadarController,\n  DoughnutController,\n  PolarAreaController,\n  BubbleController,\n  PieController,\n  ScatterController,\n} from 'chart.js';\nimport type { ChartType, ChartComponentLike } from 'chart.js';\n\nimport type {\n  ChartProps,\n  ChartJSOrUndefined,\n  TypedChartComponent,\n} from './types.js';\nimport { Chart } from './chart.js';\n\nfunction createTypedChart<T extends ChartType>(\n  type: T,\n  registerables: ChartComponentLike\n) {\n  ChartJS.register(registerables);\n\n  return forwardRef<ChartJSOrUndefined<T>, Omit<ChartProps<T>, 'type'>>(\n    (props, ref) => <Chart {...props} ref={ref} type={type} />\n  ) as TypedChartComponent<T>;\n}\n\nexport const Line = /* #__PURE__ */ createTypedChart('line', LineController);\n\nexport const Bar = /* #__PURE__ */ createTypedChart('bar', BarController);\n\nexport const Radar = /* #__PURE__ */ createTypedChart('radar', RadarController);\n\nexport const Doughnut = /* #__PURE__ */ createTypedChart(\n  'doughnut',\n  DoughnutController\n);\n\nexport const PolarArea = /* #__PURE__ */ createTypedChart(\n  'polarArea',\n  PolarAreaController\n);\n\nexport const Bubble = /* #__PURE__ */ createTypedChart(\n  'bubble',\n  BubbleController\n);\n\nexport const Pie = /* #__PURE__ */ createTypedChart('pie', PieController);\n\nexport const Scatter = /* #__PURE__ */ createTypedChart(\n  'scatter',\n  ScatterController\n);\n","import React, { useState } from 'react';\r\nimport { Bar, Pie, Line } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, ArcElement, PointElement, LineElement } from 'chart.js';\r\n\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, ArcElement, PointElement, LineElement);\r\n\r\nconst Chart = ({ data = [], title, type }) => {\r\n  if (!data || data.length === 0) {\r\n    return <div>No data available for this chart.</div>;\r\n  }\r\n\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n\r\n  const chartData = {\r\n    labels: Array.isArray(data) ? data.map(item => item.make || item.vehClass || item.fuelType || item.trans || item.co2Rating || '') : [],\r\n    datasets: [\r\n      {\r\n        label: title,\r\n        data: Array.isArray(data) ? data.map(item => item.avgCons || item.combCons || item.count || item.avgCo2 || item.percentage || 0) : [],\r\n        backgroundColor: 'rgba(75,192,192,0.6)',\r\n        borderColor: 'rgba(75,192,192,1)',\r\n        borderWidth: 1,\r\n        hoverBackgroundColor: 'rgba(75,192,192,0.4)',\r\n        hoverBorderColor: 'rgba(75,192,192,1)'\r\n      }\r\n    ]\r\n  };\r\n\r\n  const chartOptions = {\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true\r\n      }\r\n    },\r\n    onClick: (event, elements) => {\r\n      if (elements.length > 0) {\r\n        const index = elements[0].index;\r\n        setSelectedItem(data[index]);\r\n      }\r\n    },\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: title,\r\n      },\r\n    },\r\n  };\r\n\r\n  let ChartComponent;\r\n  switch(type) {\r\n    case 'fuelTypeDist':\r\n    case 'co2RatingPct':\r\n      ChartComponent = Pie;\r\n      break;\r\n    case 'consByTrans':\r\n    case 'co2ByClass':\r\n      ChartComponent = Line;\r\n      break;\r\n    default:\r\n      ChartComponent = Bar;\r\n  }\r\n\r\n  return (    \r\n    <div className=\"chart\">\r\n      <h2>{title}</h2>\r\n      <ChartComponent data={chartData} options={chartOptions} />\r\n      {selectedItem && (\r\n        <div className=\"detail-view\">\r\n          <h3>{selectedItem.make || selectedItem.vehClass || selectedItem.fuelType || selectedItem.trans || selectedItem.co2Rating}</h3>          \r\n          <p>Value: {selectedItem.avgCons || selectedItem.combCons || selectedItem.count || selectedItem.avgCo2 || selectedItem.percentage}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;","import React from 'react';\r\n\r\nconst ComparisonView = ({ items }) => {\r\n    return (\r\n        <div className=\"comparison-view\">\r\n        <h2>Comparison</h2>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Make</th>\r\n              <th>Model</th>\r\n              <th>Fuel Consumption</th>\r\n              <th>CO2 Emissions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {items.map((item, index) => (\r\n              <tr key={index}>\r\n                <td>{item.make}</td>\r\n                <td>{item.model}</td>\r\n                <td>{item.fuelConsumption}</td>\r\n                <td>{item.co2Emissions}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default ComparisonView;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Chart as ChartJS, ArcElement, LinearScale } from 'chart.js';\r\nChartJS.register(LinearScale, ArcElement);\r\nimport Chart from './Chart';\r\nimport DataTable from './DataTable';\r\nimport FilterPanel from './FilterPanel';\r\nimport ComparisonView from './ComparisonView';\r\n\r\nconst Dashboard = () => {\r\n    const [data, setData] = useState({\r\n        avgConsMake: [],\r\n        topEfficient: [],\r\n        fuelTypeDist: [],\r\n        co2ByClass: [],\r\n        bestSmog: [],\r\n        consByTrans: [],\r\n        co2RatingPct: [],\r\n        topLowCo2: []\r\n    });\r\n    const [filter, setFilter] = useState({});\r\n    const [selectedChart, setSelectedChart] = useState('avgConsMake');\r\n    const [comparisonItems, setComparisonItems] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, [filter]);\r\n\r\n    const fetchData = async () => {\r\n        setLoading(true);\r\n        setError(null);\r\n        try {\r\n            const response = await axios.get('/api/data', { params: filter });\r\n            console.log('Fetched data:', response.data); // Log response data\r\n            \r\n            // Parse the response data\r\n            const parsedData = {\r\n                avgConsMake: response.data.avgConsMake.map(item => ({ make: item.MAKE, avgCons: item.AVG_CONS })),\r\n                topEfficient: response.data.topEfficient.map(item => ({ make: item.MAKE, model: item.MODEL, combCons: item.COMB_CONS })),\r\n                fuelTypeDist: response.data.fuelTypeDist.map(item => ({ fuelType: item.FUEL_TYPE, count: item.COUNT_FT })),\r\n                co2ByClass: response.data.co2ByClass.map(item => ({ vehClass: item.VEH_CLASS, avgCo2: item.AVG_CO2 })),\r\n                bestSmog: response.data.bestSmog.map(item => ({ make: item.MAKE, model: item.MODEL, smogRating: item.SMOG_RATING })),\r\n                consByTrans: response.data.consByTrans.map(item => ({ trans: item.TRANS, avgCons: item.AVG_CONS })),\r\n                co2RatingPct: response.data.co2RatingPct.map(item => ({ co2Rating: item.CO2_RATING, count: item.COUNT_CR, percentage: item.PERCENTAGE })),\r\n                topLowCo2: response.data.topLowCo2.map(item => ({ make: item.MAKE, avgCo2: item.AVG_CO2 }))\r\n            };\r\n            \r\n            // setData(response.data);\r\n            setData(parsedData);\r\n        } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n            setError('Failed to fetch data. Please try again later.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const chartTitles = {\r\n        avgConsMake: \"Average Consumption by Make\",\r\n        co2ByClass: \"CO2 Emissions by Vehicle Class\",\r\n        fuelTypeDist: \"Fuel Type Distribution\",\r\n        bestSmog: \"Best Smog Ratings\",\r\n        consByTrans: \"Consumption by Transmission\",\r\n        co2RatingPct: \"CO2 Rating Percentages\",\r\n        topLowCo2: \"Top Low CO2 Emitters\"\r\n    };\r\n\r\n    const handleComparisonToggle = (item) => {\r\n        setComparisonItems(prevItems => \r\n            prevItems.includes(item)\r\n                ? prevItems.filter(i => i !== item)\r\n                : [...prevItems, item]\r\n        );\r\n    };\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <div>Error: {error}</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"dashboard\">\r\n            <FilterPanel onFilterChange={setFilter} />\r\n            <select onChange={(e) => setSelectedChart(e.target.value)}>\r\n                {Object.entries(chartTitles).map(([key, value]) => (\r\n                    <option key={key} value={key}>{value}</option>\r\n                ))}\r\n            </select>\r\n            {data[selectedChart] && data[selectedChart].length > 0 ? (\r\n                <Chart data={data[selectedChart]} title={chartTitles[selectedChart]} type={selectedChart} />\r\n            ) : (\r\n                <div>No data available for the selected chart.</div>\r\n            )}\r\n            <div className=\"top-efficient\">\r\n                <h2>Top Efficient Vehicles</h2>\r\n                {data.topEfficient && data.topEfficient.length > 0 ? (\r\n                    <DataTable\r\n                        data={data.topEfficient}\r\n                        onComparisonToggle={handleComparisonToggle}\r\n                    />\r\n                ) : (\r\n                    <p className=\"no-data-message\">No data available for top efficient vehicles.</p>\r\n                )}\r\n            </div>\r\n            {comparisonItems.length > 0 && <ComparisonView items={comparisonItems} />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;","import React, { useState } from 'react';\r\n\r\nconst DataTable = ({ data, title, onComparisonToggle }) => {\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const itemsPerPage = 10;\r\n\r\n    const indexOfLastItem = currentPage * itemsPerPage;\r\n    const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n    const currentItems = data.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n    const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n    return (\r\n        <div className=\"datatable\">\r\n            <h2>{title}</h2>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Make</th>\r\n                        <th>Model</th>\r\n                        <th>Combined Consumption</th>\r\n                        <th>CO2 Emissions</th>\r\n                        <th>Compare</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {Array.isArray(currentItems) && currentItems.map((vehicle, index) => (\r\n                        <tr key={index}>\r\n                            <td>{vehicle.make || ''}</td>\r\n                            <td>{vehicle.model || ''}</td>\r\n                            <td>{vehicle.combined_consumption || ''}</td>\r\n                            <td>{vehicle.co2_emissions || ''}</td>\r\n                            <td>\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    onChange={() => onComparisonToggle(vehicle)}\r\n                                />\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n            <Pagination\r\n                itemsPerPage={itemsPerPage}\r\n                totalItems={data.length}\r\n                paginate={paginate}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Pagination = ({ itemsPerPage, totalItems, paginate }) => {\r\n    const pageNumbers = [];\r\n\r\n    for (let i = 1; i <= Math.ceil(totalItems / itemsPerPage); i++) {\r\n        pageNumbers.push(i);\r\n    }\r\n\r\n    return (\r\n        <nav>\r\n            <ul className=\"pagination\">\r\n                {pageNumbers.map(number => (\r\n                    <li key={number} className=\"page-item\">\r\n                        <a onClick={() => paginate(number)} href=\"!#\" className=\"page-link\">\r\n                            {number}\r\n                        </a>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default DataTable;"],"names":["defaultDatasetIdKey","reforwardRef","ref","value","current","setLabels","currentData","nextLabels","labels","setDatasets","nextDatasets","datasetIdKey","arguments","length","addedDatasets","datasets","map","nextDataset","currentDataset","find","dataset","data","includes","push","Object","assign","cloneData","nextData","ChartComponent","props","height","width","redraw","type","options","plugins","fallbackContent","updateMode","canvasProps","canvasRef","useRef","chartRef","renderChart","Chart$1","destroyChart","destroy","useEffect","chart","nextOptions","setOptions","config","setTimeout","update","React","role","Chart","forwardRef","createTypedChart","registerables","register","Line","LineController","Bar","BarController","Pie","PieController","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","ArcElement","PointElement","LineElement","_ref","title","_jsx","children","selectedItem","setSelectedItem","useState","chartData","Array","isArray","item","make","vehClass","fuelType","trans","co2Rating","label","avgCons","combCons","count","avgCo2","percentage","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","chartOptions","scales","y","beginAtZero","onClick","event","elements","index","responsive","legend","position","display","text","_jsxs","className","items","model","fuelConsumption","co2Emissions","Dashboard","setData","avgConsMake","topEfficient","fuelTypeDist","co2ByClass","bestSmog","consByTrans","co2RatingPct","topLowCo2","filter","setFilter","selectedChart","setSelectedChart","comparisonItems","setComparisonItems","loading","setLoading","error","setError","fetchData","async","response","axios","get","params","console","log","parsedData","MAKE","AVG_CONS","MODEL","COMB_CONS","FUEL_TYPE","COUNT_FT","VEH_CLASS","AVG_CO2","smogRating","SMOG_RATING","TRANS","CO2_RATING","COUNT_CR","PERCENTAGE","chartTitles","FilterPanel","onFilterChange","onChange","e","target","entries","key","DataTable","onComparisonToggle","prevItems","i","ComparisonView","Pagination","_ref2","itemsPerPage","totalItems","paginate","pageNumbers","Math","ceil","number","href","currentPage","setCurrentPage","indexOfLastItem","indexOfFirstItem","currentItems","slice","vehicle","combined_consumption","co2_emissions","pageNumber"],"sourceRoot":""}