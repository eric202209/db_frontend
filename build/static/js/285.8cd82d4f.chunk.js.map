{"version":3,"file":"static/js/285.8cd82d4f.chunk.js","mappings":"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","sources":["../node_modules/chartjs-plugin-zoom/dist/chartjs-plugin-zoom.esm.js","../node_modules/hammerjs/hammer.js","../node_modules/react-chartjs-2/src/utils.ts","../node_modules/react-chartjs-2/src/chart.tsx","../node_modules/react-chartjs-2/src/typedCharts.tsx"],"sourcesContent":["/*!\n* chartjs-plugin-zoom v2.0.1\n* undefined\n * (c) 2016-2023 chartjs-plugin-zoom Contributors\n * Released under the MIT License\n */\nimport Hammer from 'hammerjs';\nimport { each, valueOrDefault, callback, sign, getRelativePosition } from 'chart.js/helpers';\n\nconst getModifierKey = opts => opts && opts.enabled && opts.modifierKey;\nconst keyPressed = (key, event) => key && event[key + 'Key'];\nconst keyNotPressed = (key, event) => key && !event[key + 'Key'];\n\n/**\n * @param {string|function} mode can be 'x', 'y' or 'xy'\n * @param {string} dir can be 'x' or 'y'\n * @param {import('chart.js').Chart} chart instance of the chart in question\n * @returns {boolean}\n */\nfunction directionEnabled(mode, dir, chart) {\n  if (mode === undefined) {\n    return true;\n  } else if (typeof mode === 'string') {\n    return mode.indexOf(dir) !== -1;\n  } else if (typeof mode === 'function') {\n    return mode({chart}).indexOf(dir) !== -1;\n  }\n\n  return false;\n}\n\nfunction directionsEnabled(mode, chart) {\n  if (typeof mode === 'function') {\n    mode = mode({chart});\n  }\n  if (typeof mode === 'string') {\n    return {x: mode.indexOf('x') !== -1, y: mode.indexOf('y') !== -1};\n  }\n\n  return {x: false, y: false};\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n * @param {function} fn - Function to call. No arguments are passed.\n * @param {number} delay - Delay in ms. 0 = immediate invocation.\n * @returns {function}\n */\nfunction debounce(fn, delay) {\n  let timeout;\n  return function() {\n    clearTimeout(timeout);\n    timeout = setTimeout(fn, delay);\n    return delay;\n  };\n}\n\n/**\n * Checks which axis is under the mouse cursor.\n * @param {{x: number, y: number}} point - the mouse location\n * @param {import('chart.js').Chart} [chart] instance of the chart in question\n * @return {import('chart.js').Scale}\n */\nfunction getScaleUnderPoint({x, y}, chart) {\n  const scales = chart.scales;\n  const scaleIds = Object.keys(scales);\n  for (let i = 0; i < scaleIds.length; i++) {\n    const scale = scales[scaleIds[i]];\n    if (y >= scale.top && y <= scale.bottom && x >= scale.left && x <= scale.right) {\n      return scale;\n    }\n  }\n  return null;\n}\n\n/**\n * Evaluate the chart's mode, scaleMode, and overScaleMode properties to\n * determine which axes are eligible for scaling.\n * options.overScaleMode can be a function if user want zoom only one scale of many for example.\n * @param options - Zoom or pan options\n * @param {{x: number, y: number}} point - the mouse location\n * @param {import('chart.js').Chart} [chart] instance of the chart in question\n * @return {import('chart.js').Scale[]}\n */\nfunction getEnabledScalesByPoint(options, point, chart) {\n  const {mode = 'xy', scaleMode, overScaleMode} = options || {};\n  const scale = getScaleUnderPoint(point, chart);\n\n  const enabled = directionsEnabled(mode, chart);\n  const scaleEnabled = directionsEnabled(scaleMode, chart);\n\n  // Convert deprecated overScaleEnabled to new scaleEnabled.\n  if (overScaleMode) {\n    const overScaleEnabled = directionsEnabled(overScaleMode, chart);\n    for (const axis of ['x', 'y']) {\n      if (overScaleEnabled[axis]) {\n        scaleEnabled[axis] = enabled[axis];\n        enabled[axis] = false;\n      }\n    }\n  }\n\n  if (scale && scaleEnabled[scale.axis]) {\n    return [scale];\n  }\n\n  const enabledScales = [];\n  each(chart.scales, function(scaleItem) {\n    if (enabled[scaleItem.axis]) {\n      enabledScales.push(scaleItem);\n    }\n  });\n  return enabledScales;\n}\n\nconst chartStates = new WeakMap();\n\nfunction getState(chart) {\n  let state = chartStates.get(chart);\n  if (!state) {\n    state = {\n      originalScaleLimits: {},\n      updatedScaleLimits: {},\n      handlers: {},\n      panDelta: {}\n    };\n    chartStates.set(chart, state);\n  }\n  return state;\n}\n\nfunction removeState(chart) {\n  chartStates.delete(chart);\n}\n\nfunction zoomDelta(scale, zoom, center) {\n  const range = scale.max - scale.min;\n  const newRange = range * (zoom - 1);\n\n  const centerPoint = scale.isHorizontal() ? center.x : center.y;\n  // `scale.getValueForPixel()` can return a value less than the `scale.min` or\n  // greater than `scale.max` when `centerPoint` is outside chartArea.\n  const minPercent = Math.max(0, Math.min(1,\n    (scale.getValueForPixel(centerPoint) - scale.min) / range || 0\n  ));\n\n  const maxPercent = 1 - minPercent;\n\n  return {\n    min: newRange * minPercent,\n    max: newRange * maxPercent\n  };\n}\n\nfunction getLimit(state, scale, scaleLimits, prop, fallback) {\n  let limit = scaleLimits[prop];\n  if (limit === 'original') {\n    const original = state.originalScaleLimits[scale.id][prop];\n    limit = valueOrDefault(original.options, original.scale);\n  }\n  return valueOrDefault(limit, fallback);\n}\n\nfunction getRange(scale, pixel0, pixel1) {\n  const v0 = scale.getValueForPixel(pixel0);\n  const v1 = scale.getValueForPixel(pixel1);\n  return {\n    min: Math.min(v0, v1),\n    max: Math.max(v0, v1)\n  };\n}\n\nfunction updateRange(scale, {min, max}, limits, zoom = false) {\n  const state = getState(scale.chart);\n  const {id, axis, options: scaleOpts} = scale;\n\n  const scaleLimits = limits && (limits[id] || limits[axis]) || {};\n  const {minRange = 0} = scaleLimits;\n  const minLimit = getLimit(state, scale, scaleLimits, 'min', -Infinity);\n  const maxLimit = getLimit(state, scale, scaleLimits, 'max', Infinity);\n\n  const range = zoom ? Math.max(max - min, minRange) : scale.max - scale.min;\n  const offset = (range - max + min) / 2;\n  min -= offset;\n  max += offset;\n\n  if (min < minLimit) {\n    min = minLimit;\n    max = Math.min(minLimit + range, maxLimit);\n  } else if (max > maxLimit) {\n    max = maxLimit;\n    min = Math.max(maxLimit - range, minLimit);\n  }\n  scaleOpts.min = min;\n  scaleOpts.max = max;\n\n  state.updatedScaleLimits[scale.id] = {min, max};\n\n  // return true if the scale range is changed\n  return scale.parse(min) !== scale.min || scale.parse(max) !== scale.max;\n}\n\nfunction zoomNumericalScale(scale, zoom, center, limits) {\n  const delta = zoomDelta(scale, zoom, center);\n  const newRange = {min: scale.min + delta.min, max: scale.max - delta.max};\n  return updateRange(scale, newRange, limits, true);\n}\n\nfunction zoomRectNumericalScale(scale, from, to, limits) {\n  updateRange(scale, getRange(scale, from, to), limits, true);\n}\n\nconst integerChange = (v) => v === 0 || isNaN(v) ? 0 : v < 0 ? Math.min(Math.round(v), -1) : Math.max(Math.round(v), 1);\n\nfunction existCategoryFromMaxZoom(scale) {\n  const labels = scale.getLabels();\n  const maxIndex = labels.length - 1;\n\n  if (scale.min > 0) {\n    scale.min -= 1;\n  }\n  if (scale.max < maxIndex) {\n    scale.max += 1;\n  }\n}\n\nfunction zoomCategoryScale(scale, zoom, center, limits) {\n  const delta = zoomDelta(scale, zoom, center);\n  if (scale.min === scale.max && zoom < 1) {\n    existCategoryFromMaxZoom(scale);\n  }\n  const newRange = {min: scale.min + integerChange(delta.min), max: scale.max - integerChange(delta.max)};\n  return updateRange(scale, newRange, limits, true);\n}\n\nfunction scaleLength(scale) {\n  return scale.isHorizontal() ? scale.width : scale.height;\n}\n\nfunction panCategoryScale(scale, delta, limits) {\n  const labels = scale.getLabels();\n  const lastLabelIndex = labels.length - 1;\n  let {min, max} = scale;\n  // The visible range. Ticks can be skipped, and thus not reliable.\n  const range = Math.max(max - min, 1);\n  // How many pixels of delta is required before making a step. stepSize, but limited to max 1/10 of the scale length.\n  const stepDelta = Math.round(scaleLength(scale) / Math.max(range, 10));\n  const stepSize = Math.round(Math.abs(delta / stepDelta));\n  let applied;\n  if (delta < -stepDelta) {\n    max = Math.min(max + stepSize, lastLabelIndex);\n    min = range === 1 ? max : max - range;\n    applied = max === lastLabelIndex;\n  } else if (delta > stepDelta) {\n    min = Math.max(0, min - stepSize);\n    max = range === 1 ? min : min + range;\n    applied = min === 0;\n  }\n\n  return updateRange(scale, {min, max}, limits) || applied;\n}\n\nconst OFFSETS = {\n  second: 500, // 500 ms\n  minute: 30 * 1000, // 30 s\n  hour: 30 * 60 * 1000, // 30 m\n  day: 12 * 60 * 60 * 1000, // 12 h\n  week: 3.5 * 24 * 60 * 60 * 1000, // 3.5 d\n  month: 15 * 24 * 60 * 60 * 1000, // 15 d\n  quarter: 60 * 24 * 60 * 60 * 1000, // 60 d\n  year: 182 * 24 * 60 * 60 * 1000 // 182 d\n};\n\nfunction panNumericalScale(scale, delta, limits, canZoom = false) {\n  const {min: prevStart, max: prevEnd, options} = scale;\n  const round = options.time && options.time.round;\n  const offset = OFFSETS[round] || 0;\n  const newMin = scale.getValueForPixel(scale.getPixelForValue(prevStart + offset) - delta);\n  const newMax = scale.getValueForPixel(scale.getPixelForValue(prevEnd + offset) - delta);\n  const {min: minLimit = -Infinity, max: maxLimit = Infinity} = canZoom && limits && limits[scale.axis] || {};\n  if (isNaN(newMin) || isNaN(newMax) || newMin < minLimit || newMax > maxLimit) {\n    // At limit: No change but return true to indicate no need to store the delta.\n    // NaN can happen for 0-dimension scales (either because they were configured\n    // with min === max or because the chart has 0 plottable area).\n    return true;\n  }\n  return updateRange(scale, {min: newMin, max: newMax}, limits, canZoom);\n}\n\nfunction panNonLinearScale(scale, delta, limits) {\n  return panNumericalScale(scale, delta, limits, true);\n}\n\nconst zoomFunctions = {\n  category: zoomCategoryScale,\n  default: zoomNumericalScale,\n};\n\nconst zoomRectFunctions = {\n  default: zoomRectNumericalScale,\n};\n\nconst panFunctions = {\n  category: panCategoryScale,\n  default: panNumericalScale,\n  logarithmic: panNonLinearScale,\n  timeseries: panNonLinearScale,\n};\n\nfunction shouldUpdateScaleLimits(scale, originalScaleLimits, updatedScaleLimits) {\n  const {id, options: {min, max}} = scale;\n  if (!originalScaleLimits[id] || !updatedScaleLimits[id]) {\n    return true;\n  }\n  const previous = updatedScaleLimits[id];\n  return previous.min !== min || previous.max !== max;\n}\n\nfunction removeMissingScales(limits, scales) {\n  each(limits, (opt, key) => {\n    if (!scales[key]) {\n      delete limits[key];\n    }\n  });\n}\n\nfunction storeOriginalScaleLimits(chart, state) {\n  const {scales} = chart;\n  const {originalScaleLimits, updatedScaleLimits} = state;\n\n  each(scales, function(scale) {\n    if (shouldUpdateScaleLimits(scale, originalScaleLimits, updatedScaleLimits)) {\n      originalScaleLimits[scale.id] = {\n        min: {scale: scale.min, options: scale.options.min},\n        max: {scale: scale.max, options: scale.options.max},\n      };\n    }\n  });\n\n  removeMissingScales(originalScaleLimits, scales);\n  removeMissingScales(updatedScaleLimits, scales);\n  return originalScaleLimits;\n}\n\nfunction doZoom(scale, amount, center, limits) {\n  const fn = zoomFunctions[scale.type] || zoomFunctions.default;\n  callback(fn, [scale, amount, center, limits]);\n}\n\nfunction doZoomRect(scale, amount, from, to, limits) {\n  const fn = zoomRectFunctions[scale.type] || zoomRectFunctions.default;\n  callback(fn, [scale, amount, from, to, limits]);\n}\n\nfunction getCenter(chart) {\n  const ca = chart.chartArea;\n  return {\n    x: (ca.left + ca.right) / 2,\n    y: (ca.top + ca.bottom) / 2,\n  };\n}\n\n/**\n * @param chart The chart instance\n * @param {number | {x?: number, y?: number, focalPoint?: {x: number, y: number}}} amount The zoom percentage or percentages and focal point\n * @param {string} [transition] Which transition mode to use. Defaults to 'none'\n */\nfunction zoom(chart, amount, transition = 'none') {\n  const {x = 1, y = 1, focalPoint = getCenter(chart)} = typeof amount === 'number' ? {x: amount, y: amount} : amount;\n  const state = getState(chart);\n  const {options: {limits, zoom: zoomOptions}} = state;\n\n  storeOriginalScaleLimits(chart, state);\n\n  const xEnabled = x !== 1;\n  const yEnabled = y !== 1;\n  const enabledScales = getEnabledScalesByPoint(zoomOptions, focalPoint, chart);\n\n  each(enabledScales || chart.scales, function(scale) {\n    if (scale.isHorizontal() && xEnabled) {\n      doZoom(scale, x, focalPoint, limits);\n    } else if (!scale.isHorizontal() && yEnabled) {\n      doZoom(scale, y, focalPoint, limits);\n    }\n  });\n\n  chart.update(transition);\n\n  callback(zoomOptions.onZoom, [{chart}]);\n}\n\nfunction zoomRect(chart, p0, p1, transition = 'none') {\n  const state = getState(chart);\n  const {options: {limits, zoom: zoomOptions}} = state;\n  const {mode = 'xy'} = zoomOptions;\n\n  storeOriginalScaleLimits(chart, state);\n  const xEnabled = directionEnabled(mode, 'x', chart);\n  const yEnabled = directionEnabled(mode, 'y', chart);\n\n  each(chart.scales, function(scale) {\n    if (scale.isHorizontal() && xEnabled) {\n      doZoomRect(scale, p0.x, p1.x, limits);\n    } else if (!scale.isHorizontal() && yEnabled) {\n      doZoomRect(scale, p0.y, p1.y, limits);\n    }\n  });\n\n  chart.update(transition);\n\n  callback(zoomOptions.onZoom, [{chart}]);\n}\n\nfunction zoomScale(chart, scaleId, range, transition = 'none') {\n  storeOriginalScaleLimits(chart, getState(chart));\n  const scale = chart.scales[scaleId];\n  updateRange(scale, range, undefined, true);\n  chart.update(transition);\n}\n\nfunction resetZoom(chart, transition = 'default') {\n  const state = getState(chart);\n  const originalScaleLimits = storeOriginalScaleLimits(chart, state);\n\n  each(chart.scales, function(scale) {\n    const scaleOptions = scale.options;\n    if (originalScaleLimits[scale.id]) {\n      scaleOptions.min = originalScaleLimits[scale.id].min.options;\n      scaleOptions.max = originalScaleLimits[scale.id].max.options;\n    } else {\n      delete scaleOptions.min;\n      delete scaleOptions.max;\n    }\n  });\n  chart.update(transition);\n  callback(state.options.zoom.onZoomComplete, [{chart}]);\n}\n\nfunction getOriginalRange(state, scaleId) {\n  const original = state.originalScaleLimits[scaleId];\n  if (!original) {\n    return;\n  }\n  const {min, max} = original;\n  return valueOrDefault(max.options, max.scale) - valueOrDefault(min.options, min.scale);\n}\n\nfunction getZoomLevel(chart) {\n  const state = getState(chart);\n  let min = 1;\n  let max = 1;\n  each(chart.scales, function(scale) {\n    const origRange = getOriginalRange(state, scale.id);\n    if (origRange) {\n      const level = Math.round(origRange / (scale.max - scale.min) * 100) / 100;\n      min = Math.min(min, level);\n      max = Math.max(max, level);\n    }\n  });\n  return min < 1 ? min : max;\n}\n\nfunction panScale(scale, delta, limits, state) {\n  const {panDelta} = state;\n  // Add possible cumulative delta from previous pan attempts where scale did not change\n  const storedDelta = panDelta[scale.id] || 0;\n  if (sign(storedDelta) === sign(delta)) {\n    delta += storedDelta;\n  }\n  const fn = panFunctions[scale.type] || panFunctions.default;\n  if (callback(fn, [scale, delta, limits])) {\n    // The scale changed, reset cumulative delta\n    panDelta[scale.id] = 0;\n  } else {\n    // The scale did not change, store cumulative delta\n    panDelta[scale.id] = delta;\n  }\n}\n\nfunction pan(chart, delta, enabledScales, transition = 'none') {\n  const {x = 0, y = 0} = typeof delta === 'number' ? {x: delta, y: delta} : delta;\n  const state = getState(chart);\n  const {options: {pan: panOptions, limits}} = state;\n  const {onPan} = panOptions || {};\n\n  storeOriginalScaleLimits(chart, state);\n\n  const xEnabled = x !== 0;\n  const yEnabled = y !== 0;\n\n  each(enabledScales || chart.scales, function(scale) {\n    if (scale.isHorizontal() && xEnabled) {\n      panScale(scale, x, limits, state);\n    } else if (!scale.isHorizontal() && yEnabled) {\n      panScale(scale, y, limits, state);\n    }\n  });\n\n  chart.update(transition);\n\n  callback(onPan, [{chart}]);\n}\n\nfunction getInitialScaleBounds(chart) {\n  const state = getState(chart);\n  storeOriginalScaleLimits(chart, state);\n  const scaleBounds = {};\n  for (const scaleId of Object.keys(chart.scales)) {\n    const {min, max} = state.originalScaleLimits[scaleId] || {min: {}, max: {}};\n    scaleBounds[scaleId] = {min: min.scale, max: max.scale};\n  }\n\n  return scaleBounds;\n}\n\nfunction isZoomedOrPanned(chart) {\n  const scaleBounds = getInitialScaleBounds(chart);\n  for (const scaleId of Object.keys(chart.scales)) {\n    const {min: originalMin, max: originalMax} = scaleBounds[scaleId];\n\n    if (originalMin !== undefined && chart.scales[scaleId].min !== originalMin) {\n      return true;\n    }\n\n    if (originalMax !== undefined && chart.scales[scaleId].max !== originalMax) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction removeHandler(chart, type) {\n  const {handlers} = getState(chart);\n  const handler = handlers[type];\n  if (handler && handler.target) {\n    handler.target.removeEventListener(type, handler);\n    delete handlers[type];\n  }\n}\n\nfunction addHandler(chart, target, type, handler) {\n  const {handlers, options} = getState(chart);\n  const oldHandler = handlers[type];\n  if (oldHandler && oldHandler.target === target) {\n    // already attached\n    return;\n  }\n  removeHandler(chart, type);\n  handlers[type] = (event) => handler(chart, event, options);\n  handlers[type].target = target;\n  target.addEventListener(type, handlers[type]);\n}\n\nfunction mouseMove(chart, event) {\n  const state = getState(chart);\n  if (state.dragStart) {\n    state.dragging = true;\n    state.dragEnd = event;\n    chart.update('none');\n  }\n}\n\nfunction keyDown(chart, event) {\n  const state = getState(chart);\n  if (!state.dragStart || event.key !== 'Escape') {\n    return;\n  }\n\n  removeHandler(chart, 'keydown');\n  state.dragging = false;\n  state.dragStart = state.dragEnd = null;\n  chart.update('none');\n}\n\nfunction zoomStart(chart, event, zoomOptions) {\n  const {onZoomStart, onZoomRejected} = zoomOptions;\n  if (onZoomStart) {\n    const point = getRelativePosition(event, chart);\n    if (callback(onZoomStart, [{chart, event, point}]) === false) {\n      callback(onZoomRejected, [{chart, event}]);\n      return false;\n    }\n  }\n}\n\nfunction mouseDown(chart, event) {\n  const state = getState(chart);\n  const {pan: panOptions, zoom: zoomOptions = {}} = state.options;\n  if (\n    event.button !== 0 ||\n    keyPressed(getModifierKey(panOptions), event) ||\n    keyNotPressed(getModifierKey(zoomOptions.drag), event)\n  ) {\n    return callback(zoomOptions.onZoomRejected, [{chart, event}]);\n  }\n\n  if (zoomStart(chart, event, zoomOptions) === false) {\n    return;\n  }\n  state.dragStart = event;\n\n  addHandler(chart, chart.canvas, 'mousemove', mouseMove);\n  addHandler(chart, window.document, 'keydown', keyDown);\n}\n\nfunction computeDragRect(chart, mode, beginPointEvent, endPointEvent) {\n  const xEnabled = directionEnabled(mode, 'x', chart);\n  const yEnabled = directionEnabled(mode, 'y', chart);\n  let {top, left, right, bottom, width: chartWidth, height: chartHeight} = chart.chartArea;\n\n  const beginPoint = getRelativePosition(beginPointEvent, chart);\n  const endPoint = getRelativePosition(endPointEvent, chart);\n\n  if (xEnabled) {\n    left = Math.min(beginPoint.x, endPoint.x);\n    right = Math.max(beginPoint.x, endPoint.x);\n  }\n\n  if (yEnabled) {\n    top = Math.min(beginPoint.y, endPoint.y);\n    bottom = Math.max(beginPoint.y, endPoint.y);\n  }\n  const width = right - left;\n  const height = bottom - top;\n\n  return {\n    left,\n    top,\n    right,\n    bottom,\n    width,\n    height,\n    zoomX: xEnabled && width ? 1 + ((chartWidth - width) / chartWidth) : 1,\n    zoomY: yEnabled && height ? 1 + ((chartHeight - height) / chartHeight) : 1\n  };\n}\n\nfunction mouseUp(chart, event) {\n  const state = getState(chart);\n  if (!state.dragStart) {\n    return;\n  }\n\n  removeHandler(chart, 'mousemove');\n  const {mode, onZoomComplete, drag: {threshold = 0}} = state.options.zoom;\n  const rect = computeDragRect(chart, mode, state.dragStart, event);\n  const distanceX = directionEnabled(mode, 'x', chart) ? rect.width : 0;\n  const distanceY = directionEnabled(mode, 'y', chart) ? rect.height : 0;\n  const distance = Math.sqrt(distanceX * distanceX + distanceY * distanceY);\n\n  // Remove drag start and end before chart update to stop drawing selected area\n  state.dragStart = state.dragEnd = null;\n\n  if (distance <= threshold) {\n    state.dragging = false;\n    chart.update('none');\n    return;\n  }\n\n  zoomRect(chart, {x: rect.left, y: rect.top}, {x: rect.right, y: rect.bottom}, 'zoom');\n\n  setTimeout(() => (state.dragging = false), 500);\n  callback(onZoomComplete, [{chart}]);\n}\n\nfunction wheelPreconditions(chart, event, zoomOptions) {\n  // Before preventDefault, check if the modifier key required and pressed\n  if (keyNotPressed(getModifierKey(zoomOptions.wheel), event)) {\n    callback(zoomOptions.onZoomRejected, [{chart, event}]);\n    return;\n  }\n\n  if (zoomStart(chart, event, zoomOptions) === false) {\n    return;\n  }\n\n  // Prevent the event from triggering the default behavior (e.g. content scrolling).\n  if (event.cancelable) {\n    event.preventDefault();\n  }\n\n  // Firefox always fires the wheel event twice:\n  // First without the delta and right after that once with the delta properties.\n  if (event.deltaY === undefined) {\n    return;\n  }\n  return true;\n}\n\nfunction wheel(chart, event) {\n  const {handlers: {onZoomComplete}, options: {zoom: zoomOptions}} = getState(chart);\n\n  if (!wheelPreconditions(chart, event, zoomOptions)) {\n    return;\n  }\n\n  const rect = event.target.getBoundingClientRect();\n  const speed = 1 + (event.deltaY >= 0 ? -zoomOptions.wheel.speed : zoomOptions.wheel.speed);\n  const amount = {\n    x: speed,\n    y: speed,\n    focalPoint: {\n      x: event.clientX - rect.left,\n      y: event.clientY - rect.top\n    }\n  };\n\n  zoom(chart, amount);\n\n  if (onZoomComplete) {\n    onZoomComplete();\n  }\n}\n\nfunction addDebouncedHandler(chart, name, handler, delay) {\n  if (handler) {\n    getState(chart).handlers[name] = debounce(() => callback(handler, [{chart}]), delay);\n  }\n}\n\nfunction addListeners(chart, options) {\n  const canvas = chart.canvas;\n  const {wheel: wheelOptions, drag: dragOptions, onZoomComplete} = options.zoom;\n\n  // Install listeners. Do this dynamically based on options so that we can turn zoom on and off\n  // We also want to make sure listeners aren't always on. E.g. if you're scrolling down a page\n  // and the mouse goes over a chart you don't want it intercepted unless the plugin is enabled\n  if (wheelOptions.enabled) {\n    addHandler(chart, canvas, 'wheel', wheel);\n    addDebouncedHandler(chart, 'onZoomComplete', onZoomComplete, 250);\n  } else {\n    removeHandler(chart, 'wheel');\n  }\n  if (dragOptions.enabled) {\n    addHandler(chart, canvas, 'mousedown', mouseDown);\n    addHandler(chart, canvas.ownerDocument, 'mouseup', mouseUp);\n  } else {\n    removeHandler(chart, 'mousedown');\n    removeHandler(chart, 'mousemove');\n    removeHandler(chart, 'mouseup');\n    removeHandler(chart, 'keydown');\n  }\n}\n\nfunction removeListeners(chart) {\n  removeHandler(chart, 'mousedown');\n  removeHandler(chart, 'mousemove');\n  removeHandler(chart, 'mouseup');\n  removeHandler(chart, 'wheel');\n  removeHandler(chart, 'click');\n  removeHandler(chart, 'keydown');\n}\n\nfunction createEnabler(chart, state) {\n  return function(recognizer, event) {\n    const {pan: panOptions, zoom: zoomOptions = {}} = state.options;\n    if (!panOptions || !panOptions.enabled) {\n      return false;\n    }\n    const srcEvent = event && event.srcEvent;\n    if (!srcEvent) { // Sometimes Hammer queries this with a null event.\n      return true;\n    }\n    if (!state.panning && event.pointerType === 'mouse' && (\n      keyNotPressed(getModifierKey(panOptions), srcEvent) || keyPressed(getModifierKey(zoomOptions.drag), srcEvent))\n    ) {\n      callback(panOptions.onPanRejected, [{chart, event}]);\n      return false;\n    }\n    return true;\n  };\n}\n\nfunction pinchAxes(p0, p1) {\n  // fingers position difference\n  const pinchX = Math.abs(p0.clientX - p1.clientX);\n  const pinchY = Math.abs(p0.clientY - p1.clientY);\n\n  // diagonal fingers will change both (xy) axes\n  const p = pinchX / pinchY;\n  let x, y;\n  if (p > 0.3 && p < 1.7) {\n    x = y = true;\n  } else if (pinchX > pinchY) {\n    x = true;\n  } else {\n    y = true;\n  }\n  return {x, y};\n}\n\nfunction handlePinch(chart, state, e) {\n  if (state.scale) {\n    const {center, pointers} = e;\n    // Hammer reports the total scaling. We need the incremental amount\n    const zoomPercent = 1 / state.scale * e.scale;\n    const rect = e.target.getBoundingClientRect();\n    const pinch = pinchAxes(pointers[0], pointers[1]);\n    const mode = state.options.zoom.mode;\n    const amount = {\n      x: pinch.x && directionEnabled(mode, 'x', chart) ? zoomPercent : 1,\n      y: pinch.y && directionEnabled(mode, 'y', chart) ? zoomPercent : 1,\n      focalPoint: {\n        x: center.x - rect.left,\n        y: center.y - rect.top\n      }\n    };\n\n    zoom(chart, amount);\n\n    // Keep track of overall scale\n    state.scale = e.scale;\n  }\n}\n\nfunction startPinch(chart, state) {\n  if (state.options.zoom.pinch.enabled) {\n    state.scale = 1;\n  }\n}\n\nfunction endPinch(chart, state, e) {\n  if (state.scale) {\n    handlePinch(chart, state, e);\n    state.scale = null; // reset\n    callback(state.options.zoom.onZoomComplete, [{chart}]);\n  }\n}\n\nfunction handlePan(chart, state, e) {\n  const delta = state.delta;\n  if (delta) {\n    state.panning = true;\n    pan(chart, {x: e.deltaX - delta.x, y: e.deltaY - delta.y}, state.panScales);\n    state.delta = {x: e.deltaX, y: e.deltaY};\n  }\n}\n\nfunction startPan(chart, state, event) {\n  const {enabled, onPanStart, onPanRejected} = state.options.pan;\n  if (!enabled) {\n    return;\n  }\n  const rect = event.target.getBoundingClientRect();\n  const point = {\n    x: event.center.x - rect.left,\n    y: event.center.y - rect.top\n  };\n\n  if (callback(onPanStart, [{chart, event, point}]) === false) {\n    return callback(onPanRejected, [{chart, event}]);\n  }\n\n  state.panScales = getEnabledScalesByPoint(state.options.pan, point, chart);\n  state.delta = {x: 0, y: 0};\n  clearTimeout(state.panEndTimeout);\n  handlePan(chart, state, event);\n}\n\nfunction endPan(chart, state) {\n  state.delta = null;\n  if (state.panning) {\n    state.panEndTimeout = setTimeout(() => (state.panning = false), 500);\n    callback(state.options.pan.onPanComplete, [{chart}]);\n  }\n}\n\nconst hammers = new WeakMap();\nfunction startHammer(chart, options) {\n  const state = getState(chart);\n  const canvas = chart.canvas;\n  const {pan: panOptions, zoom: zoomOptions} = options;\n\n  const mc = new Hammer.Manager(canvas);\n  if (zoomOptions && zoomOptions.pinch.enabled) {\n    mc.add(new Hammer.Pinch());\n    mc.on('pinchstart', () => startPinch(chart, state));\n    mc.on('pinch', (e) => handlePinch(chart, state, e));\n    mc.on('pinchend', (e) => endPinch(chart, state, e));\n  }\n\n  if (panOptions && panOptions.enabled) {\n    mc.add(new Hammer.Pan({\n      threshold: panOptions.threshold,\n      enable: createEnabler(chart, state)\n    }));\n    mc.on('panstart', (e) => startPan(chart, state, e));\n    mc.on('panmove', (e) => handlePan(chart, state, e));\n    mc.on('panend', () => endPan(chart, state));\n  }\n\n  hammers.set(chart, mc);\n}\n\nfunction stopHammer(chart) {\n  const mc = hammers.get(chart);\n  if (mc) {\n    mc.remove('pinchstart');\n    mc.remove('pinch');\n    mc.remove('pinchend');\n    mc.remove('panstart');\n    mc.remove('pan');\n    mc.remove('panend');\n    mc.destroy();\n    hammers.delete(chart);\n  }\n}\n\nvar version = \"2.0.1\";\n\nfunction draw(chart, caller, options) {\n  const dragOptions = options.zoom.drag;\n  const {dragStart, dragEnd} = getState(chart);\n\n  if (dragOptions.drawTime !== caller || !dragEnd) {\n    return;\n  }\n  const {left, top, width, height} = computeDragRect(chart, options.zoom.mode, dragStart, dragEnd);\n  const ctx = chart.ctx;\n\n  ctx.save();\n  ctx.beginPath();\n  ctx.fillStyle = dragOptions.backgroundColor || 'rgba(225,225,225,0.3)';\n  ctx.fillRect(left, top, width, height);\n\n  if (dragOptions.borderWidth > 0) {\n    ctx.lineWidth = dragOptions.borderWidth;\n    ctx.strokeStyle = dragOptions.borderColor || 'rgba(225,225,225)';\n    ctx.strokeRect(left, top, width, height);\n  }\n  ctx.restore();\n}\n\nvar plugin = {\n  id: 'zoom',\n\n  version,\n\n  defaults: {\n    pan: {\n      enabled: false,\n      mode: 'xy',\n      threshold: 10,\n      modifierKey: null,\n    },\n    zoom: {\n      wheel: {\n        enabled: false,\n        speed: 0.1,\n        modifierKey: null\n      },\n      drag: {\n        enabled: false,\n        drawTime: 'beforeDatasetsDraw',\n        modifierKey: null\n      },\n      pinch: {\n        enabled: false\n      },\n      mode: 'xy',\n    }\n  },\n\n  start: function(chart, _args, options) {\n    const state = getState(chart);\n    state.options = options;\n\n    if (Object.prototype.hasOwnProperty.call(options.zoom, 'enabled')) {\n      console.warn('The option `zoom.enabled` is no longer supported. Please use `zoom.wheel.enabled`, `zoom.drag.enabled`, or `zoom.pinch.enabled`.');\n    }\n    if (Object.prototype.hasOwnProperty.call(options.zoom, 'overScaleMode')\n      || Object.prototype.hasOwnProperty.call(options.pan, 'overScaleMode')) {\n      console.warn('The option `overScaleMode` is deprecated. Please use `scaleMode` instead (and update `mode` as desired).');\n    }\n\n    if (Hammer) {\n      startHammer(chart, options);\n    }\n\n    chart.pan = (delta, panScales, transition) => pan(chart, delta, panScales, transition);\n    chart.zoom = (args, transition) => zoom(chart, args, transition);\n    chart.zoomRect = (p0, p1, transition) => zoomRect(chart, p0, p1, transition);\n    chart.zoomScale = (id, range, transition) => zoomScale(chart, id, range, transition);\n    chart.resetZoom = (transition) => resetZoom(chart, transition);\n    chart.getZoomLevel = () => getZoomLevel(chart);\n    chart.getInitialScaleBounds = () => getInitialScaleBounds(chart);\n    chart.isZoomedOrPanned = () => isZoomedOrPanned(chart);\n  },\n\n  beforeEvent(chart) {\n    const state = getState(chart);\n    if (state.panning || state.dragging) {\n      // cancel any event handling while panning or dragging\n      return false;\n    }\n  },\n\n  beforeUpdate: function(chart, args, options) {\n    const state = getState(chart);\n    state.options = options;\n    addListeners(chart, options);\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    draw(chart, 'beforeDatasetsDraw', options);\n  },\n\n  afterDatasetsDraw(chart, _args, options) {\n    draw(chart, 'afterDatasetsDraw', options);\n  },\n\n  beforeDraw(chart, _args, options) {\n    draw(chart, 'beforeDraw', options);\n  },\n\n  afterDraw(chart, _args, options) {\n    draw(chart, 'afterDraw', options);\n  },\n\n  stop: function(chart) {\n    removeListeners(chart);\n\n    if (Hammer) {\n      stopHammer(chart);\n    }\n    removeState(chart);\n  },\n\n  panFunctions,\n  zoomFunctions,\n  zoomRectFunctions,\n};\n\nexport { plugin as default, pan, resetZoom, zoom, zoomRect, zoomScale };\n","/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n            .replace(/^\\s+at\\s+/gm, '')\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down\n        if (!this.pressed) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n\n    this.primaryTouch = null;\n    this.lastTouches = [];\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nfunction recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n    }\n}\n\nfunction setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n        var lastTouch = {x: touch.clientX, y: touch.clientY};\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n        var removeLastTouch = function() {\n            var i = lts.indexOf(lastTouch);\n            if (i > -1) {\n                lts.splice(i, 1);\n            }\n        };\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n}\n\nfunction isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n    for (var i = 0; i < this.lastTouches.length; i++) {\n        var t = this.lastTouches[i];\n        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\nfunction getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n        return false;\n    }\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.7';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n        if (handler === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    var prop;\n    each(manager.options.cssProps, function(value, name) {\n        prop = prefixed(element.style, name);\n        if (add) {\n            manager.oldCssProps[prop] = element.style[prop];\n            element.style[prop] = value;\n        } else {\n            element.style[prop] = manager.oldCssProps[prop] || '';\n        }\n    });\n    if (!add) {\n        manager.oldCssProps = {};\n    }\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (typeof define === 'function' && define.amd) {\n    define(function() {\n        return Hammer;\n    });\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n","import type { MouseEvent } from 'react';\nimport type {\n  ChartType,\n  ChartData,\n  DefaultDataPoint,\n  ChartDataset,\n  ChartOptions,\n  Chart,\n} from 'chart.js';\n\nimport type { ForwardedRef } from './types.js';\n\nconst defaultDatasetIdKey = 'label';\n\nexport function reforwardRef<T>(ref: ForwardedRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}\n\nexport function setOptions<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(chart: Chart<TType, TData, TLabel>, nextOptions: ChartOptions<TType>) {\n  const options = chart.options;\n\n  if (options && nextOptions) {\n    Object.assign(options, nextOptions);\n  }\n}\n\nexport function setLabels<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextLabels: TLabel[] | undefined\n) {\n  currentData.labels = nextLabels;\n}\n\nexport function setDatasets<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextDatasets: ChartDataset<TType, TData>[],\n  datasetIdKey = defaultDatasetIdKey\n) {\n  const addedDatasets: ChartDataset<TType, TData>[] = [];\n\n  currentData.datasets = nextDatasets.map(\n    (nextDataset: Record<string, unknown>) => {\n      // given the new set, find it's current match\n      const currentDataset = currentData.datasets.find(\n        (dataset: Record<string, unknown>) =>\n          dataset[datasetIdKey] === nextDataset[datasetIdKey]\n      );\n\n      // There is no original to update, so simply add new one\n      if (\n        !currentDataset ||\n        !nextDataset.data ||\n        addedDatasets.includes(currentDataset)\n      ) {\n        return { ...nextDataset } as ChartDataset<TType, TData>;\n      }\n\n      addedDatasets.push(currentDataset);\n\n      Object.assign(currentDataset, nextDataset);\n\n      return currentDataset;\n    }\n  );\n}\n\nexport function cloneData<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(data: ChartData<TType, TData, TLabel>, datasetIdKey = defaultDatasetIdKey) {\n  const nextData: ChartData<TType, TData, TLabel> = {\n    labels: [],\n    datasets: [],\n  };\n\n  setLabels(nextData, data.labels);\n  setDatasets(nextData, data.datasets, datasetIdKey);\n\n  return nextData;\n}\n\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getDatasetAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'dataset',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'nearest',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementsAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'index',\n    { intersect: true },\n    false\n  );\n}\n","import React, { useEffect, useRef, forwardRef } from 'react';\nimport { Chart as ChartJS } from 'chart.js';\nimport type { ChartType, DefaultDataPoint } from 'chart.js';\n\nimport type { ForwardedRef, ChartProps, BaseChartComponent } from './types.js';\nimport {\n  reforwardRef,\n  cloneData,\n  setOptions,\n  setLabels,\n  setDatasets,\n} from './utils.js';\n\nfunction ChartComponent<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  props: ChartProps<TType, TData, TLabel>,\n  ref: ForwardedRef<ChartJS<TType, TData, TLabel>>\n) {\n  const {\n    height = 150,\n    width = 300,\n    redraw = false,\n    datasetIdKey,\n    type,\n    data,\n    options,\n    plugins = [],\n    fallbackContent,\n    updateMode,\n    ...canvasProps\n  } = props as ChartProps;\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const chartRef = useRef<ChartJS | null>();\n\n  const renderChart = () => {\n    if (!canvasRef.current) return;\n\n    chartRef.current = new ChartJS(canvasRef.current, {\n      type,\n      data: cloneData(data, datasetIdKey),\n      options: options && { ...options },\n      plugins,\n    });\n\n    reforwardRef(ref, chartRef.current);\n  };\n\n  const destroyChart = () => {\n    reforwardRef(ref, null);\n\n    if (chartRef.current) {\n      chartRef.current.destroy();\n      chartRef.current = null;\n    }\n  };\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && options) {\n      setOptions(chartRef.current, options);\n    }\n  }, [redraw, options]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current) {\n      setLabels(chartRef.current.config.data, data.labels);\n    }\n  }, [redraw, data.labels]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && data.datasets) {\n      setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n    }\n  }, [redraw, data.datasets]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    if (redraw) {\n      destroyChart();\n      setTimeout(renderChart);\n    } else {\n      chartRef.current.update(updateMode);\n    }\n  }, [redraw, options, data.labels, data.datasets, updateMode]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    destroyChart();\n    setTimeout(renderChart);\n  }, [type]);\n\n  useEffect(() => {\n    renderChart();\n\n    return () => destroyChart();\n  }, []);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      role='img'\n      height={height}\n      width={width}\n      {...canvasProps}\n    >\n      {fallbackContent}\n    </canvas>\n  );\n}\n\nexport const Chart = forwardRef(ChartComponent) as BaseChartComponent;\n","import React, { forwardRef } from 'react';\nimport {\n  Chart as ChartJS,\n  LineController,\n  BarController,\n  RadarController,\n  DoughnutController,\n  PolarAreaController,\n  BubbleController,\n  PieController,\n  ScatterController,\n} from 'chart.js';\nimport type { ChartType, ChartComponentLike } from 'chart.js';\n\nimport type {\n  ChartProps,\n  ChartJSOrUndefined,\n  TypedChartComponent,\n} from './types.js';\nimport { Chart } from './chart.js';\n\nfunction createTypedChart<T extends ChartType>(\n  type: T,\n  registerables: ChartComponentLike\n) {\n  ChartJS.register(registerables);\n\n  return forwardRef<ChartJSOrUndefined<T>, Omit<ChartProps<T>, 'type'>>(\n    (props, ref) => <Chart {...props} ref={ref} type={type} />\n  ) as TypedChartComponent<T>;\n}\n\nexport const Line = /* #__PURE__ */ createTypedChart('line', LineController);\n\nexport const Bar = /* #__PURE__ */ createTypedChart('bar', BarController);\n\nexport const Radar = /* #__PURE__ */ createTypedChart('radar', RadarController);\n\nexport const Doughnut = /* #__PURE__ */ createTypedChart(\n  'doughnut',\n  DoughnutController\n);\n\nexport const PolarArea = /* #__PURE__ */ createTypedChart(\n  'polarArea',\n  PolarAreaController\n);\n\nexport const Bubble = /* #__PURE__ */ createTypedChart(\n  'bubble',\n  BubbleController\n);\n\nexport const Pie = /* #__PURE__ */ createTypedChart('pie', PieController);\n\nexport const Scatter = /* #__PURE__ */ createTypedChart(\n  'scatter',\n  ScatterController\n);\n"],"names":["getModifierKey","opts","enabled","modifierKey","keyPressed","key","event","keyNotPressed","directionEnabled","mode","dir","chart","undefined","indexOf","directionsEnabled","x","y","getEnabledScalesByPoint","options","point","scaleMode","overScaleMode","scale","_ref","scales","scaleIds","Object","keys","i","length","top","bottom","left","right","getScaleUnderPoint","scaleEnabled","overScaleEnabled","axis","enabledScales","each","scaleItem","push","chartStates","WeakMap","getState","state","get","originalScaleLimits","updatedScaleLimits","handlers","panDelta","set","zoomDelta","zoom","center","range","max","min","newRange","centerPoint","isHorizontal","minPercent","Math","getValueForPixel","getLimit","scaleLimits","prop","fallback","limit","original","id","valueOrDefault","updateRange","_ref2","limits","arguments","scaleOpts","minRange","minLimit","Infinity","maxLimit","offset","parse","integerChange","v","isNaN","round","OFFSETS","second","minute","hour","day","week","month","quarter","year","panNumericalScale","delta","canZoom","prevStart","prevEnd","time","newMin","getPixelForValue","newMax","panNonLinearScale","zoomFunctions","category","maxIndex","getLabels","existCategoryFromMaxZoom","default","zoomRectFunctions","from","to","pixel0","pixel1","v0","v1","getRange","panFunctions","lastLabelIndex","stepDelta","width","height","scaleLength","stepSize","abs","applied","logarithmic","timeseries","removeMissingScales","opt","storeOriginalScaleLimits","previous","shouldUpdateScaleLimits","doZoom","amount","fn","type","callback","doZoomRect","getCenter","ca","chartArea","transition","focalPoint","zoomOptions","xEnabled","yEnabled","update","onZoom","zoomRect","p0","p1","getZoomLevel","origRange","scaleId","getOriginalRange","level","panScale","storedDelta","sign","pan","panOptions","onPan","getInitialScaleBounds","scaleBounds","removeHandler","handler","target","removeEventListener","addHandler","oldHandler","addEventListener","mouseMove","dragStart","dragging","dragEnd","keyDown","zoomStart","onZoomStart","onZoomRejected","getRelativePosition","mouseDown","button","drag","canvas","window","document","computeDragRect","beginPointEvent","endPointEvent","chartWidth","chartHeight","beginPoint","endPoint","zoomX","zoomY","mouseUp","onZoomComplete","threshold","rect","distanceX","distanceY","distance","sqrt","setTimeout","wheel","cancelable","preventDefault","deltaY","wheelPreconditions","getBoundingClientRect","speed","clientX","clientY","addDebouncedHandler","name","delay","timeout","clearTimeout","debounce","createEnabler","recognizer","srcEvent","panning","pointerType","onPanRejected","handlePinch","e","pointers","zoomPercent","pinch","pinchX","pinchY","p","pinchAxes","handlePan","deltaX","panScales","hammers","startHammer","mc","Hammer","add","on","startPinch","endPinch","enable","onPanStart","panEndTimeout","startPan","onPanComplete","endPan","draw","caller","dragOptions","drawTime","ctx","save","beginPath","fillStyle","backgroundColor","fillRect","borderWidth","lineWidth","strokeStyle","borderColor","strokeRect","restore","plugin","version","defaults","start","_args","prototype","hasOwnProperty","call","console","warn","args","zoomScale","resetZoom","scaleOptions","isZoomedOrPanned","originalMin","originalMax","beforeEvent","beforeUpdate","wheelOptions","ownerDocument","addListeners","beforeDatasetsDraw","afterDatasetsDraw","beforeDraw","afterDraw","stop","removeListeners","remove","destroy","delete","stopHammer","removeState","exportName","assign","VENDOR_PREFIXES","TEST_ELEMENT","createElement","TYPE_FUNCTION","now","Date","setTimeoutContext","context","bindFn","invokeArrayArg","arg","Array","isArray","obj","iterator","forEach","deprecate","method","message","deprecationMessage","Error","stack","replace","log","apply","this","TypeError","output","index","source","nextKey","extend","dest","src","merge","inherit","child","base","properties","childP","baseP","create","constructor","_super","boolOrFn","val","ifUndefined","val1","val2","addEventListeners","types","splitStr","removeEventListeners","hasParent","node","parent","parentNode","inStr","str","find","trim","split","inArray","findByKey","toArray","slice","uniqueArray","sort","results","values","a","b","prefixed","property","prefix","camelProp","toUpperCase","_uniqueId","getWindowForElement","element","doc","defaultView","parentWindow","SUPPORT_TOUCH","SUPPORT_POINTER_EVENTS","SUPPORT_ONLY_TOUCH","test","navigator","userAgent","INPUT_TYPE_TOUCH","INPUT_TYPE_MOUSE","COMPUTE_INTERVAL","INPUT_START","INPUT_END","INPUT_CANCEL","DIRECTION_NONE","DIRECTION_LEFT","DIRECTION_RIGHT","DIRECTION_UP","DIRECTION_DOWN","DIRECTION_HORIZONTAL","DIRECTION_VERTICAL","DIRECTION_ALL","PROPS_XY","PROPS_CLIENT_XY","Input","manager","self","inputTarget","domHandler","ev","init","inputHandler","eventType","input","pointersLen","changedPointersLen","changedPointers","isFirst","isFinal","session","pointersLength","firstInput","simpleCloneInputData","firstMultiple","offsetCenter","timeStamp","deltaTime","angle","getAngle","getDistance","offsetDelta","prevDelta","prevInput","computeDeltaXY","offsetDirection","getDirection","overallVelocity","getVelocity","overallVelocityX","overallVelocityY","end","rotation","getRotation","maxPointers","velocity","velocityX","velocityY","direction","last","lastInterval","computeIntervalInputData","computeInputData","emit","recognize","p2","props","atan2","PI","evEl","evTarget","evWin","MOUSE_INPUT_MAP","mousedown","mousemove","mouseup","MOUSE_ELEMENT_EVENTS","MOUSE_WINDOW_EVENTS","MouseInput","pressed","which","POINTER_INPUT_MAP","pointerdown","pointermove","pointerup","pointercancel","pointerout","IE10_POINTER_TYPE_ENUM","POINTER_ELEMENT_EVENTS","POINTER_WINDOW_EVENTS","PointerEventInput","store","pointerEvents","MSPointerEvent","PointerEvent","removePointer","eventTypeNormalized","toLowerCase","isTouch","storeIndex","pointerId","splice","SINGLE_TOUCH_INPUT_MAP","touchstart","touchmove","touchend","touchcancel","SingleTouchInput","started","normalizeSingleTouches","all","touches","changed","changedTouches","concat","TOUCH_INPUT_MAP","TOUCH_TARGET_EVENTS","TouchInput","targetIds","getTouches","allTouches","identifier","targetTouches","changedTargetTouches","filter","touch","DEDUP_TIMEOUT","TouchMouseInput","mouse","primaryTouch","lastTouches","recordTouches","eventData","setLastTouch","lastTouch","lts","isSyntheticEvent","t","dx","dy","inputEvent","inputData","isMouse","sourceCapabilities","firesTouchEvents","PREFIXED_TOUCH_ACTION","style","NATIVE_TOUCH_ACTION","TOUCH_ACTION_COMPUTE","TOUCH_ACTION_AUTO","TOUCH_ACTION_MANIPULATION","TOUCH_ACTION_NONE","TOUCH_ACTION_PAN_X","TOUCH_ACTION_PAN_Y","TOUCH_ACTION_MAP","touchMap","cssSupports","CSS","supports","getTouchActionProps","TouchAction","value","compute","actions","touchAction","recognizers","getTouchAction","hasPanX","hasPanY","cleanTouchActions","join","preventDefaults","prevented","hasNone","isTapPointer","isTapMovement","isTapTouchTime","preventSrc","STATE_POSSIBLE","STATE_FAILED","Recognizer","simultaneous","requireFail","stateStr","directionStr","getRecognizerByNameIfManager","otherRecognizer","AttrRecognizer","PanRecognizer","pX","pY","PinchRecognizer","PressRecognizer","_timer","_input","RotateRecognizer","SwipeRecognizer","TapRecognizer","pTime","pCenter","count","preset","Manager","recognizeWith","dropRecognizeWith","requireFailure","dropRequireFailure","hasRequireFailures","canRecognizeWith","additionalEvent","tryEmit","canEmit","inputDataClone","reset","process","attrTest","optionPointers","isRecognized","isValid","directionTest","hasMoved","inOut","validPointers","validMovement","validTime","taps","interval","posThreshold","validTouchTime","failTimeout","validInterval","validMultiTap","tapCount","VERSION","domEvents","inputClass","cssProps","userSelect","touchSelect","touchCallout","contentZooming","userDrag","tapHighlightColor","oldCssProps","toggleCssProps","item","force","stopped","curRecognizer","existing","events","off","data","gestureEvent","createEvent","initEvent","gesture","dispatchEvent","triggerDomEvent","INPUT_MOVE","STATE_BEGAN","STATE_CHANGED","STATE_ENDED","STATE_RECOGNIZED","STATE_CANCELLED","Tap","Pan","Swipe","Pinch","Rotate","Press","define","defaultDatasetIdKey","reforwardRef","ref","current","setLabels","currentData","nextLabels","labels","setDatasets","nextDatasets","datasetIdKey","addedDatasets","datasets","map","nextDataset","currentDataset","dataset","includes","cloneData","nextData","ChartComponent","redraw","plugins","fallbackContent","updateMode","canvasProps","canvasRef","useRef","chartRef","renderChart","Chart$1","destroyChart","useEffect","nextOptions","setOptions","config","React","role","Chart","forwardRef","createTypedChart","registerables","register","Line","LineController","Bar","BarController","Pie","PieController"],"sourceRoot":""}