{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Chart as ChartJS,LinearScale}from'chart.js';ChartJS.register(LinearScale);import Chart from'./Chart';import Dashboard from'./Dashboard';import DataTable from'./DataTable';import FilterPanel from'./FilterPanel';import ComparisonView from'./ComparisonView';import'./App.css';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[data,setData]=useState({avgConsMake:[],topEfficient:[],fuelTypeDist:[],co2ByClass:[],bestSmog:[],consByTrans:[],co2RatingPct:[],topLowCo2:[]});const[filter,setFilter]=useState({});const[selectedChart,setSelectedChart]=useState('avgConsMake');const[comparisonItems,setComparisonItems]=useState([]);const[loading,setLoading]=useState(true);// Add loading state\nuseEffect(()=>{fetchData();},[filter]);const fetchData=async()=>{try{const response=await axios.get('/api/data',{params:filter});console.log('Fetched data:',response.data);// Log response data\nsetData(response.data);}catch(error){console.error('Error fetching data:',error);setLoading(false);// Set loading state to false on error\n}};const chartTitles={avgConsMake:\"Average Consumption by Make\",co2ByClass:\"CO2 Emissions by Vehicle Class\",fuelTypeDist:\"Fuel Type Distribution\",bestSmog:\"Best Smog Ratings\",consByTrans:\"Consumption by Transmission\",co2RatingPct:\"CO2 Rating Percentages\",topLowCo2:\"Top Low CO2 Emitters\"// Add other chart titles as needed\n};const handleComparisonToggle=item=>{setComparisonItems(prevItems=>prevItems.includes(item)?prevItems.filter(i=>i!==item):[...prevItems,item]);};// if (loading) {\n//     return <p>Loading...</p>; // Optionally show a loading indicator\n// }\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Fuel Consumption Dashboard\"}),/*#__PURE__*/_jsx(Dashboard,{}),/*#__PURE__*/_jsx(FilterPanel,{onFilterChange:setFilter}),/*#__PURE__*/_jsxs(\"select\",{onChange:e=>setSelectedChart(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"avgConsMake\",children:\"Average Consumption by Make\"}),/*#__PURE__*/_jsx(\"option\",{value:\"co2ByClass\",children:\"CO2 Emissions by Vehicle Class\"})]}),/*#__PURE__*/_jsx(Chart,{data:data[selectedChart],title:chartTitles[selectedChart]}),/*#__PURE__*/_jsx(DataTable,{data:data.topEfficient,title:\"Top Efficient Vehicles\",onComparisonToggle:handleComparisonToggle}),comparisonItems.length>0&&/*#__PURE__*/_jsx(ComparisonView,{items:comparisonItems})]});};export default App;","map":{"version":3,"names":["React","useState","useEffect","Chart","ChartJS","LinearScale","register","Dashboard","DataTable","FilterPanel","ComparisonView","axios","jsx","_jsx","jsxs","_jsxs","App","data","setData","avgConsMake","topEfficient","fuelTypeDist","co2ByClass","bestSmog","consByTrans","co2RatingPct","topLowCo2","filter","setFilter","selectedChart","setSelectedChart","comparisonItems","setComparisonItems","loading","setLoading","fetchData","response","get","params","console","log","error","chartTitles","handleComparisonToggle","item","prevItems","includes","i","className","children","onFilterChange","onChange","e","target","value","title","onComparisonToggle","length","items"],"sources":["D:/centennial/centennial 2024 summer/comp214/Assignment/group project/db_frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Chart as ChartJS, LinearScale } from 'chart.js';\r\nChartJS.register(LinearScale);\r\nimport Chart from './Chart'; \r\nimport Dashboard from './Dashboard';\r\nimport DataTable from './DataTable';\r\nimport FilterPanel from './FilterPanel';\r\nimport ComparisonView from './ComparisonView';\r\nimport './App.css';\r\nimport axios from 'axios';\r\n\r\nconst App = () => {\r\n    const [data, setData] = useState({\r\n        avgConsMake: [],\r\n        topEfficient: [],\r\n        fuelTypeDist: [],\r\n        co2ByClass: [],\r\n        bestSmog: [],\r\n        consByTrans: [],\r\n        co2RatingPct: [],\r\n        topLowCo2: []\r\n    });\r\n    const [filter, setFilter] = useState({});\r\n    const [selectedChart, setSelectedChart] = useState('avgConsMake');\r\n    const [comparisonItems, setComparisonItems] = useState([]);\r\n    const [loading, setLoading] = useState(true); // Add loading state\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, [filter]);\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            const response = await axios.get('/api/data', { params: filter });\r\n            console.log('Fetched data:', response.data); // Log response data\r\n            setData(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n            setLoading(false); // Set loading state to false on error\r\n        }\r\n    };\r\n\r\n    const chartTitles = {\r\n        avgConsMake: \"Average Consumption by Make\",\r\n        co2ByClass: \"CO2 Emissions by Vehicle Class\",\r\n        fuelTypeDist: \"Fuel Type Distribution\",\r\n        bestSmog: \"Best Smog Ratings\",\r\n        consByTrans: \"Consumption by Transmission\",\r\n        co2RatingPct: \"CO2 Rating Percentages\",\r\n        topLowCo2: \"Top Low CO2 Emitters\",\r\n        // Add other chart titles as needed\r\n    };\r\n\r\n    const handleComparisonToggle = (item) => {\r\n        setComparisonItems(prevItems => \r\n            prevItems.includes(item)\r\n                ? prevItems.filter(i => i !== item)\r\n                : [...prevItems, item]\r\n        );\r\n    };\r\n\r\n    // if (loading) {\r\n    //     return <p>Loading...</p>; // Optionally show a loading indicator\r\n    // }\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <h1>Fuel Consumption Dashboard</h1>\r\n            <Dashboard />\r\n            <FilterPanel onFilterChange={setFilter} />\r\n            <select onChange={(e) => setSelectedChart(e.target.value)}>\r\n                <option value=\"avgConsMake\">Average Consumption by Make</option>\r\n                <option value=\"co2ByClass\">CO2 Emissions by Vehicle Class</option>\r\n                {/* Add other options if needed */}\r\n            </select>\r\n            <Chart data={data[selectedChart]} title={chartTitles[selectedChart]} />\r\n            <DataTable \r\n                data={data.topEfficient} \r\n                title=\"Top Efficient Vehicles\" \r\n                onComparisonToggle={handleComparisonToggle}\r\n            />\r\n            {comparisonItems.length > 0 && <ComparisonView items={comparisonItems} />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}